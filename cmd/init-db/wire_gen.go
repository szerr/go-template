// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/casbin/casbin/v2"
	"go-template/internal/pkg/config"
	"go-template/internal/pkg/database"
	"go-template/internal/pkg/logger"
	"go-template/internal/pkg/permissions"
)

// Injectors from wire.go:

// wireApp init
func wireApp() (*casbin.Enforcer, func(), error) {
	configConfig, err := config.InitConfig()
	if err != nil {
		return nil, nil, err
	}
	zapLogger, cleanup, err := logger.NewLogger(configConfig)
	if err != nil {
		return nil, nil, err
	}
	db, cleanup2, err := database.NewDB(configConfig, zapLogger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	enforcer, err := permissions.NewCasbinEnforcer(db)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return enforcer, func() {
		cleanup2()
		cleanup()
	}, nil
}
